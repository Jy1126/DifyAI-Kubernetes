apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: difyai
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        kubernetes.io/hostname: node1
      containers:
        - name: redis
          image: 192.168.44.130:5000/redis:6-alpine
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: difyai-config
          env:
            - name: REDISCLI_AUTH
              valueFrom:
                configMapKeyRef:
                  name: difyai-config
                  key: REDIS_PASSWORD
          ports:
            - name: redis-port
              protocol: TCP
              containerPort: 6379
          command: [ "redis-server", "--save", "20", "1", "--loglevel", "warning", "--requirepass", "$(REDIS_PASSWORD)" ]
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
          volumeMounts:
            - mountPath: /data
              name: redis-data
      volumes:
        - name: redis-data
          hostPath:
            path: /root/dify/storage/v1.7.1/redis      # 节点上的真实目录
            type: DirectoryOrCreate
